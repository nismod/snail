name: build
# refer to https://docs.github.com/en/actions/guides/building-and-testing-python
on: [push]

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ["3.6", "3.10"]

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Build C++
        run: |
          cmake -Bbuild .
          cmake --build build/ --target run_tests

      - name: Test C++
        run: ./build/run_tests

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies and build python module
        run: |
          python -m pip install --upgrade pip wheel setuptools
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install --verbose .[dev]

      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          pytest --cov=snail --cov-report=term-missing tests

  build-mingw64:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Setup Python
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-python-pip
            git

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build and install
        run: pip install .

      - name: Test
        run:  |
          pip install pytest affine numpy
          python -m pytest
